use md::Md;
use http::server::HttpServer;
use http::server::Method;
use http::server::Request;

mod slash;

// use slash::Slash;

async fn main() -> Future<()> {
    let server = HttpServer::new();
    let counter = 0;

    server.route("/", Method::Get, |req: Request| -> string {
        slash::Slash::emit(counter)
    });

    server.route("/counter", Method::Get, |req: Request| -> string {
        "<p>serving number ${counter}</p>"
    });

    server.route("/increment", Method::Post, |req: Request| -> string {
        counter = counter + 1;
        "${counter}"
    });

    server.route("/decrement", Method::Post, |req: Request| -> string {
        counter = counter - 1;
        "${counter}"
    });

    server.route("/help", Method::Get, |req: Request| -> string {
        "
        <p>hit the /counter endpoint to view the counter</p>
        <p>post to /increment to increment the counter</p>
        <p>post to /decrement to decrement the counter</p>
        "
    });

    server.serve(3031).await
}
